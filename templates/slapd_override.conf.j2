{# vim: filetype=systemd.jinja2 #}
[Service]
User={{ openldap_server_user }}
Group={{ openldap_server_group }}
RuntimeDirectory={{ openldap_server_runtime_path | relpath('/run') | quote }}
{% if ansible_facts['os_family'] == 'Debian' %}
# Debian's /etc/init.d/slapd tries creating /var/run/ldapi (a symlink), which fails if this unit is invoked as a non-root user
# The following line creates that symlink with high privileges, so the init script does not have to (or try to) do it
ExecStartPre=+/bin/ln -nfs {{ openldap_server_runtime_path | relpath('/run') | quote }} /var/run/ldapi
{% endif %}
# Allow binding to low ports
CapabilityBoundingSet=
CapabilityBoundingSet=CAP_NET_BIND_SERVICE
AmbientCapabilities=
AmbientCapabilities=CAP_NET_BIND_SERVICE
# Apply principle of least privilege
NoNewPrivileges=true
ProtectSystem=strict
ProtectHome=true
ReadWritePaths={{ openldap_server_config_path | quote }} {{ openldap_server_dit | map(attribute='db_directory') | map('default', openldap_server_db_path) | map('quote') | unique | join(' ') }}
PrivateTmp=true
PrivateDevices=true
ProtectKernelTunables=true
ProtectKernelModules=true
ProtectControlGroups=true
LockPersonality=true
MemoryDenyWriteExecute=true
RestrictAddressFamilies=AF_INET AF_INET6 AF_UNIX
RestrictNamespaces=true
RestrictRealtime=true
SystemCallFilter=@system-service @basic-io @io-event @network-io madvise
SystemCallFilter=~@aio @chown @keyring @memlock @privileged @resources @setuid
SystemCallArchitectures=native
RemoveIPC=true
